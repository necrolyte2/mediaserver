#! /bin/sh

### BEGIN INIT INFO
# Provides:          kodi
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of Kodi
# Description:       starts instance of Kodi using start-stop-daemon and xinit
### END INIT INFO

. /lib/lsb/init-functions

############### EDIT ME ##################

# path to xinit exec
DAEMON=/usr/bin/xinit

# startup args
DAEMON_OPTS=" /usr/bin/kodi-standalone -- :0"

# script name
NAME=kodi

# app name
DESC=Kodi

# user
RUN_AS=<%= @kodiuser %>

# Path of the PID file
PID_FILE=/var/run/kodi.pid

############### END EDIT ME ##################

test -x $DAEMON || exit 0

status() {
    ps --pid $(cat $PID_FILE) >/dev/null 2>&1
    _RET=$?
}

case "$1" in
  start)
        status
        if [ $_RET -eq 0 ]
        then
            log_success_msg "$DESC already running"
            exit 0
        fi
        log_success_msg "Starting $DESC"
        start-stop-daemon --start -c $RUN_AS --background --pidfile $PID_FILE  --make-pidfile --exec $DAEMON -- $DAEMON_OPTS
        if [ $? -eq 0 ]
        then
            log_success_msg "Started $DESC"
        else
            log_failure_msg "Failed starting $DESC"
        fi
        ;;
  stop)
        log_success_msg "Starting $DESC"
        start-stop-daemon --stop --pidfile $PID_FILE
        if [ $? -eq 0 ]
        then
            log_success_msg "Stopped $DESC"
        else
            log_failure_msg "Failed stopping $DESC"
        fi
        ;;

  restart|force-reload)
        echo "Restarting $DESC"
				if [ -e $PID_FILE ]
				then
						start-stop-daemon --stop --pidfile $PID_FILE
						sleep 5
				fi
        start-stop-daemon --start -c $RUN_AS --background --pidfile $PID_FILE  --make-pidfile --exec $DAEMON -- $DAEMON_OPTS
        ;;
  status)
        status
        if [ $_RET -eq 0 ]
        then
          log_success_msg "$DESC is running"
        else
          log_success_msg "$DESC is not running"
        fi
        ;;
  *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
